console.log('Hello');
import flatpickr from 'flatpickr';
import 'flatpickr/dist/flatpickr.min.css';

import iziToast from 'izitoast';
import 'izitoast/dist/css/iziToast.min.css';

// –ó–Ω–∞—Ö–æ–¥–∏–º–æ DOM-–µ–ª–µ–º–µ–Ω—Ç–∏
const startBtn = document.querySelector('[data-start]');
const dateInput = document.querySelector('#datetime-picker');

const daysEl = document.querySelector('[data-days]');
const hoursEl = document.querySelector('[data-hours]');
const minutesEl = document.querySelector('[data-minutes]');
const secondsEl = document.querySelector('[data-seconds]');

let selectedTime = null; // –í–∏–±—Ä–∞–Ω–∞ –¥–∞—Ç–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º
let countdownInterval = null; // ID —ñ–Ω—Ç–µ—Ä–≤–∞–ª—É, —â–æ–± –∑—É–ø–∏–Ω—è—Ç–∏ –ø—Ä–∏ –ø–æ—Ç—Ä–µ–±—ñ

// –î–µ–∞–∫—Ç–∏–≤—É—î–º–æ –∫–Ω–æ–ø–∫—É –Ω–∞ —Å—Ç–∞—Ä—Ç—ñ
startBtn.disabled = true;

// –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è flatpickr –∑ –æ–ø—Ü—ñ—è–º–∏
flatpickr(dateInput, {
  enableTime: true, // –î–æ–∑–≤–æ–ª—è—î –≤–∏–±—ñ—Ä —á–∞—Å—É
  time_24hr: true, // –§–æ—Ä–º–∞—Ç 24-–≥–æ–¥–∏–Ω–Ω–∏–π
  defaultDate: new Date(), // –ü–æ—Ç–æ—á–Ω–∞ –¥–∞—Ç–∞
  minuteIncrement: 1, // –ö—Ä–æ–∫ –≤–∏–±–æ—Ä—É —Ö–≤–∏–ª–∏–Ω
  onClose(selectedDates) {
    // –ö–æ–ª–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤–∏–±—Ä–∞–≤ –¥–∞—Ç—É
    const pickedDate = selectedDates[0];
    const now = new Date();

    if (pickedDate <= now) {
      // –Ø–∫—â–æ –¥–∞—Ç–∞ –≤ –º–∏–Ω—É–ª–æ–º—É ‚Äî –ø–æ–∫–∞–∑—É—î–º–æ –ø–æ–º–∏–ª–∫—É
      iziToast.error({
        title: 'Error',
        message: 'Please choose a date in the future',
        position: 'topRight',
      });
      startBtn.disabled = true;
    } else {
      // –Ø–∫—â–æ –¥–∞—Ç–∞ –∫–æ—Ä–µ–∫—Ç–Ω–∞ ‚Äî –∞–∫—Ç–∏–≤—É—î–º–æ –∫–Ω–æ–ø–∫—É
      selectedTime = pickedDate;
      startBtn.disabled = false;
    }
  },
});

// –û–±—Ä–æ–±–Ω–∏–∫ –∫–Ω–æ–ø–∫–∏ —Å—Ç–∞—Ä—Ç—É
startBtn.addEventListener('click', () => {
  if (!selectedTime) return;

  startBtn.disabled = true;
  dateInput.disabled = true; // –ó–∞–±–æ—Ä–æ–Ω—è—î–º–æ –∑–º—ñ–Ω—É –¥–∞—Ç–∏ –ø—ñ–¥ —á–∞—Å –≤—ñ–¥–ª—ñ–∫—É

  countdownInterval = setInterval(() => {
    const now = new Date();
    const diff = selectedTime - now;

    if (diff <= 0) {
      clearInterval(countdownInterval);
      updateTimerDisplay(0);
      iziToast.success({
        title: 'Done!',
        message: 'Countdown completed üéâ',
        position: 'topRight',
      });
      return;
    }

    updateTimerDisplay(diff);
  }, 1000);
});

// –û–Ω–æ–≤–ª–µ–Ω–Ω—è DOM –∑–Ω–∞—á–µ–Ω—å (–¥–Ω—ñ–≤, –≥–æ–¥–∏–Ω, —Ö–≤–∏–ª–∏–Ω, —Å–µ–∫—É–Ω–¥)
function updateTimerDisplay(ms) {
  const { days, hours, minutes, seconds } = convertMs(ms);

  daysEl.textContent = addLeadingZero(days);
  hoursEl.textContent = addLeadingZero(hours);
  minutesEl.textContent = addLeadingZero(minutes);
  secondsEl.textContent = addLeadingZero(seconds);
}

// –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü—ñ—è –º—ñ–ª—ñ—Å–µ–∫—É–Ω–¥ —É –¥–Ω—ñ, –≥–æ–¥–∏–Ω–∏, —Ö–≤–∏–ª–∏–Ω–∏, —Å–µ–∫—É–Ω–¥–∏
function convertMs(ms) {
  const sec = 1000;
  const min = sec * 60;
  const hour = min * 60;
  const day = hour * 24;

  return {
    days: Math.floor(ms / day),
    hours: Math.floor((ms % day) / hour),
    minutes: Math.floor((ms % hour) / min),
    seconds: Math.floor((ms % min) / sec),
  };
}

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è –≤–µ–¥—É—á–æ–≥–æ –Ω—É–ª—è (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥ 08 –∑–∞–º—ñ—Å—Ç—å 8)
function addLeadingZero(value) {
  return String(value).padStart(2, '0');
}
